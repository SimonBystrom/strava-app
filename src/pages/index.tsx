import { zodResolver } from "@hookform/resolvers/zod";
import type { NextPage } from "next";
import { signIn, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useCallback } from "react";
import { useForm } from "react-hook-form";
import { ILogin, loginSchema } from "../server/validations/auth";
import { handleLogin } from "../utils/strava";
import { trpc } from "../utils/trpc";
import styles from '../styles/Home.module.scss'

const Home: NextPage = () => {
  const {data: session} = useSession()
  console.log(session)

  const { register, handleSubmit } = useForm<ILogin>({
    resolver: zodResolver(loginSchema),
  });

  const onSubmit = useCallback(async (data: ILogin) => {
    await signIn("credentials", { ...data, callbackUrl: "/" });
  }, []);

  if(!session) {
    return (
      <>
        <Head>
          <title>Workout app</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <form
          className="flex items-center justify-center h-screen w-full"
          onSubmit={handleSubmit(onSubmit)}
        >
          <div className="card w-96 bg-base-100 shadow-xl">
            <div className="card-body">
              <h2 className="card-title">Welcome back!</h2>
              <input
                type="email"
                placeholder="Type your email..."
                className="input input-bordered w-full max-w-xs mt-2"
                {...register("email")}
              />
              <input
                type="password"
                placeholder="Type your password..."
                className="input input-bordered w-full max-w-xs my-2"
                {...register("password")}
              />
              <div className="card-actions items-center justify-between">
                <Link href="/sign-up" className="link">
                  Go to sign up
                </Link>
                <button className="btn btn-secondary" type="submit">
                  Login
                </button>
              </div>
            </div>
          </div>
        </form>
      </>
    );
  }
  // TODO:
  // Get the strava info -> Save the strava access_token and refersh_token in db
  // use the previous setup to quickly move between the tabs
  return (
    <div className={styles.container}>
      <button onClick={() => handleLogin(session.id as string)}>Connect to strava</button>
      <p>{session?.user?.email}</p>
    </div>
  )

};

export default Home;
